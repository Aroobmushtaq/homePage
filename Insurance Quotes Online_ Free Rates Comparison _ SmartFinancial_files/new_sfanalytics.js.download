if (void 0 === affiliate) var affiliate = {aid: "", cid: ""};
queryParams = {}
urlQuery = window.location.search || window.location.hash || window.location.href;
//urlParams = window.location.search.replace(/\?/, "").split("&");
urlParams = urlQuery.replace(/\?/, "").split("&");
for (i in urlParams) {
  keyValue = urlParams[i].split('=');
  queryParams[keyValue[0]] = keyValue[1];
}

aid = queryParams.aid || affiliate.aid;
cid = queryParams.cid || affiliate.cid;
sid = queryParams.sid || affiliate.sid;
tid = queryParams.tid || affiliate.tid;
ks = queryParams.ks || '';
uid = queryParams.uid || '';
clickid = queryParams.click_id || queryParams.msclkid || '';
gclid = queryParams.gclid || '';
sub1 = queryParams.sub1 || '';
fullUrl = encodeURIComponent(window.location.href);
referrer = encodeURIComponent(document.referrer);
device = "desktop";
ua = navigator.userAgent;
if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {
  device = "mobile";
}

if (aid) {
  validateAID(aid);
}

function sendAnalytics() {
  try {
    xhttp = new XMLHttpRequest;
    xhttp.onreadystatechange = function () {
      if (this.readyState === 4) {
        if (this.status === 200) {
          var ipdata = JSON.parse(xhttp.responseText);
          ipdata.expire = new Date().getTime() + 86400000;
          if (ipdata.postal) {
            localStorage.setItem('ipdata', JSON.stringify(ipdata));
            updateAnalyticHead(ipdata.ip, ipdata.postal, ipdata.region_code);
          } else {
            getZipFromGoogleAPI(ipdata);
          }
        } else {
          updateAnalyticHead('', '', '')
        }
      }
    };
    xhttp.open("GET", "https://api.ipdata.co/?api-key=8f0f67706338f0343ede110eb33d806da197be435c01b960a2cd1fff", true);
    xhttp.send();
  } catch (e) {
    console.log(e);
    updateAnalyticHead('', '', '')
  }
}

function getZipFromGoogleAPI(ipdata) {
  try {
    xhttp = new XMLHttpRequest;
    xhttp.onreadystatechange = function () {
      if (this.readyState === 4) {
        if (this.status === 200) {
          data = JSON.parse(xhttp.responseText);
          results = data.results || [];
          if (results.length > 0) {
            address_components = results[0].address_components || [];
            for (let address of address_components) {
              if (address.types.includes('postal_code')) {
                ipdata.postal = address.long_name || '';
                break;
              }
            }
          }
        }
        localStorage.setItem('ipdata', JSON.stringify(ipdata));
        updateAnalyticHead(ipdata.ip, ipdata.postal, ipdata.region_code)
      }
    };
    xhttp.open("GET", `https://maps.googleapis.com/maps/api/geocode/json?latlng=${ipdata.latitude},${ipdata.longitude}&key=AIzaSyDgpvvGjt3PiswL8rCdqLenVa2Gs-Myd3Y`, true);
    xhttp.send();
  } catch (e) {
    console.log(e);
    updateAnalyticHead(ipdata.ip, ipdata.postal, ipdata.region_code)
  }
}

function validateAID(laid) {
  try {
    x_http = new XMLHttpRequest;
    x_http.onreadystatechange = function () {
      if (this.readyState === 4) {
        if (this.status === 200) {
          aid_info = JSON.parse(x_http.responseText);
          if (aid_info.status === 'terminated') {
            window.location.href = 'unauthorized.html';
          }
        }
      }
    };
    x_http.open("GET", "https://api.affiliates.contactability.com/api/v1/affiliates/" + laid, true);
    x_http.send();
  } catch (e) {
    console.log(e);
  }
}

function updateAnalyticHead(ip_address, postal, stateCode) {
  // form_version_loaded = localStorage.getItem('rapidfire_form_version') || 3;
  form_version_loaded = 3;
  src = "https://forms.smartfinancial.com/sfanalytics/sfpxl?aid=" + aid + "&cid=" + cid + "&sid=" + sid + "&tid=" + tid + "&ks=" + ks + "&click_id=" + clickid + "&gclid=" + gclid + "&sub1=" + sub1 + "&ip_address=" + ip_address + "&full_url=" + fullUrl + "&uid=" + uid + "&referrer=" + referrer + "&device=" + device + "&postal=" + postal + "&region_code=" + stateCode + "&lp_url=" + window.location.href.split("?")[0] + "&form_version=" + form_version_loaded
  img = document.createElement("img")
  img.setAttribute("src", src);
  document.head.appendChild(img);
}

try {
  const ipdata = JSON.parse(localStorage.getItem('ipdata') || '{}');
  if (ipdata.expire > new Date().getTime()) {
    updateAnalyticHead(ipdata.ip, ipdata.postal, ipdata.region_code);
  } else {
    sendAnalytics();
  }
} catch (e) {
  console.log(e);
  sendAnalytics();
}
